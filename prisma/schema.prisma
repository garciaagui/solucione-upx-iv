generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    name      String   @db.VarChar(255)
    email     String   @unique
    password  String   @db.VarChar(255)
    role      Role
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")

    Occurrence      Occurrence[]
    OccurrenceReply OccurrenceReply[]

    @@map(name: "users")
}

model Occurrence {
    id           Int      @id @default(autoincrement())
    title        String   @db.VarChar(127)
    description  String   @db.VarChar(255)
    street       String   @db.VarChar(255)
    neighborhood String   @db.VarChar(255)
    zipCode      String   @map(name: "zip_code") @db.Char(10)
    reference    String?  @default("") @db.VarChar(255)
    status       Status
    image        String   @db.VarChar(255)
    userId       Int      @map(name: "user_id")
    createdAt    DateTime @default(now()) @map(name: "created_at")
    updatedAt    DateTime @updatedAt @map(name: "updated_at")

    user              User              @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    occurrenceReplies OccurrenceReply[]

    @@map(name: "occurrences")
}

model OccurrenceReply {
    id               Int          @id @default(autoincrement())
    description      String       @db.VarChar(255)
    imageUrl         String?      @default("") @map(name: "image_url") @db.VarChar(255)
    userId           Int          @map(name: "user_id")
    occurrenceId     Int          @map(name: "occurrence_id")
    occurrenceStatus StatusUpdate @map(name: "occurrence_status")
    createdAt        DateTime     @default(now()) @map(name: "created_at")
    updatedAt        DateTime     @updatedAt @map(name: "updated_at")

    user       User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    occurrence Occurrence @relation(fields: [occurrenceId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map(name: "occurrences_replies")
}

enum StatusUpdate {
    Andamento
    Finalizado
}

enum Role {
    user
    admin
}

enum Status {
    Aberto
    Andamento
    Finalizado
}
